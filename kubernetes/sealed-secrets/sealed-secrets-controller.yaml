---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: sealed-secrets-controller
  namespace: sealed-secrets
  labels:
    app.kubernetes.io/name: sealed-secrets-controller
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sealed-secrets-controller
    spec:
      # Pin controller to amd64 nodes until arm64 images available
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
      containers:
      - command:
        - controller
        image: index.docker.io/karlskewes/sealed-secrets-controller
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
        name: sealed-secrets-controller
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10002
      serviceAccountName: sealed-secrets-controller
---
# Not required as we store the public key in git repo
# Required for Prometheus scrape though
apiVersion: v1
kind: Service
metadata:
  name: sealed-secrets-controller
  namespace: sealed-secrets
  labels:
    app.kubernetes.io/name: sealed-secrets-controller
spec:
  ports:
  - port: 8080
  selector:
    name: sealed-secrets-controller
---
# Allow Sealed Secrets Controller to talk to K8S API for secret decrypt/save
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: sealed-secrets
  namespace: sealed-secrets
  labels:
    app.kubernetes.io/name: sealed-secrets-controller
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: sealed-secrets-controller
  egress:
  - ports:
    - port: 443  # kubernetes.default.svc Port
      protocol: TCP
    - port: 6443  # kubernetes.default.svc TargetPort
      protocol: TCP
    to:
    # FIXME: Use proper CIDR boundaries for subnets
    - ipBlock:
        cidr: 192.168.1.50/32  # k8s-m-00
    - ipBlock:
        cidr: 192.168.1.51/32  # k8s-m-01
    - ipBlock:
        cidr: 192.168.1.52/32  # k8s-m-02
    - ipBlock:
        cidr: 10.233.0.1/32  # kubernetes.default.svc
    - ipBlock:
        cidr: 192.168.99.100/32  # minikube IP kubernetes.default.svc
